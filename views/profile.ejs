<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
   
</head>
<body class="bg-gray-50">
    <div class="hidden lg:block lg:w-full top-2 z-50 mb-30">
        <%- include('./partials/header') %>
    </div>
    <!-- Header -->
    <header class="sticky top-0 z-50 bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60 border-b">
        <div class="container mx-auto flex flex-col sm:flex-row justify-between items-center gap-4 p-4">
            <div class="flex items-center gap-4">
                <div class="w-12 h-12 bg-gray-200 rounded-full overflow-hidden">
                    <img src="https://api.dicebear.com/8.x/initials/svg?seed=<%= user.fullname %>" alt="Avatar" class="w-full h-full object-cover">
                </div>
                <div class="text-sm text-gray-600">
                    <div class="font-medium"><%= user.fullname %></div>
                    <div><%= user.email %></div>
                </div>
            </div>
            <button class="px-6 py-2 border border-gray-300 hover:border-gray-900 hover:bg-gray-900 hover:text-white transition-colors duration-200">
                EDIT PROFILE
            </button>
        </div>
    </header>

    <div class="container mx-auto p-4">
        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Sidebar Navigation -->
            <aside class="w-full lg:w-1/4">
                <!-- Order Alerts Section -->
                <div class="mb-8">
                    <h2 class="font-medium mb-4">Order Alerts</h2>
                    <div class=" p-4 rounded-lg flex items-center justify-between cursor-pointer sidebar-item group transition-all duration-200" data-section="order-alerts" onclick="showContent('order-alerts', 'Order Alerts')">
                        <div class="flex items-center gap-3">
                            <span class="text-xl">üîí</span>
                            <div>
                                <div class="font-medium"><a href="">My Orders</a></div>
                                <div class="text-sm text-gray-500">Check your order status</div>
                            </div>
                        </div>
                        <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                    </div>
                </div>

                <!-- Saved Payment Methods -->
                <div class="space-y-2 mb-8">
                    <div class="flex items-center gap-3 p-4 hover:bg-gray-100 rounded-lg cursor-pointer sidebar-item group transition-all duration-200" data-section="saved-cards" onclick="showContent('saved-cards', 'Saved Cards')">
                        <span class="text-xl">üí≥</span>
                        <div class="flex-1">
                            <div class="font-medium">Saved Cards</div>
                            <div class="text-sm text-gray-500">Add credit or debit card for faster checkout</div>
                        </div>
                        <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                    </div>
                    <div class="flex items-center gap-3 p-4 hover:bg-gray-100 rounded-lg cursor-pointer sidebar-item group transition-all duration-200" data-section="saved-upi" onclick="showContent('saved-upi', 'Saved UPI IDs')">
                        <span class="text-xl">üì±</span>
                        <div class="flex-1">
                            <div class="font-medium">Saved UPI IDs</div>
                            <div class="text-sm text-gray-500">Add UPI IDs for faster checkout</div>
                        </div>
                        <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                    </div>
                    <div class="flex items-center gap-3 p-4 hover:bg-gray-100 rounded-lg cursor-pointer sidebar-item group transition-all duration-200" data-section="saved-address" onclick="showContent('saved-address', 'Saved Address')">
                        <span class="text-xl">üìç</span>
                        <div class="flex-1">
                            <div class="font-medium">Saved Address</div>
                            <div class="text-sm text-gray-500">Add a delivery address for faster checkout</div>
                        </div>
                        <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                    </div>
                </div>

                <!-- Help Section -->
                <div>
                    <h2 class="font-medium mb-4">Help & Services</h2>
                    <div class="space-y-2">
                        <div class="flex items-center gap-3 p-4 hover:bg-gray-100 rounded-lg cursor-pointer sidebar-item group transition-all duration-200" data-section="help-center" onclick="showContent('help-center', 'Help Center')">
                            <span class="text-xl">‚ùì</span>
                            <div class="flex-1">
                                <div class="font-medium">Help Center</div>
                                <div class="text-sm text-gray-500">Find help here</div>
                            </div>
                            <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                        </div>
                        <div class="flex items-center gap-3 p-4 hover:bg-gray-100 rounded-lg cursor-pointer sidebar-item group transition-all duration-200" data-section="terms-conditions" onclick="showContent('terms-conditions', 'Terms & Conditions')">
                            <span class="text-xl">üìÑ</span>
                            <div class="flex-1">
                                <div class="font-medium">Terms & Conditions</div>
                                <div class="text-sm text-gray-500">Terms and Conditions</div>
                            </div>
                            <span class="text-xl arrow-icon transition-transform duration-200">‚Ä∫</span>
                        </div>
                    </div>
                </div>
            </aside>

            <!-- Main Content -->
            <main class="flex-1" id="main-content">
                <div class="flex justify-between items-center mb-6">
                    <h1 id="main-content-heading" class="text-xl font-medium">Order History</h1>
                    <span class="text-sm text-gray-500">Past 6 months</span>
                </div>
                <div id="order-alerts" class="content-section bg-white p-8 rounded-lg border shadow-sm text-center text-gray-500 hidden">
                    No Orders placed
                </div>
                <div id="saved-cards" class="content-section bg-white p-8 rounded-lg border shadow-sm text-center text-gray-500 hidden">
                    No saved cards available.
                </div>
                <div id="saved-upi" class="content-section bg-white p-8 rounded-lg border shadow-sm text-center text-gray-500 hidden">
                    No saved UPI IDs available.
                </div>

                 <!-- Saved Addresses Section -->
    <div id="saved-address" class="content-section bg-white p-6 rounded-lg border shadow-sm">
        <!-- <h2 class="text-xl font-semibold text-gray-700 mb-4">Saved Addresses</h2> -->
        
        <!-- Message when no addresses are saved -->
        <div id="no-address-message" class="text-center text-gray-500">No saved address available.</div>

        <!-- Address List -->
        <div id="address-list" class="space-y-4" ></div>

        <!-- Add New Address Button -->
        <button id="add-address-btn" class="mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
            + Add New Address
        </button>

        <!-- Address Form (Initially Hidden) -->
        <form id="address-form" class="hidden mt-4 bg-gray-50 p-4 rounded-lg shadow-md">
            <h3 class="text-lg font-semibold mb-2">Add New Address</h3>
            <input type="text" id="full-name" placeholder="Full Name" class="w-full p-2 border rounded mb-2" value="<%= user.fullname %>">
            <input type="text" id="mobile" placeholder="Mobile Number" class="w-full p-2 border rounded mb-2">
            <input type="text" id="pincode" placeholder="Pincode" class="w-full p-2 border rounded mb-2">
            <input type="text" id="state" placeholder="State" class="w-full p-2 border rounded mb-2">
            <input type="text" id="city" placeholder="City" class="w-full p-2 border rounded mb-2">
            <input type="text" id="house" placeholder="House / Flat No." class="w-full p-2 border rounded mb-2">
            <input type="text" id="area" placeholder="Area / Street Name" class="w-full p-2 border rounded mb-2">
            
            <button type="button" id="save-address-btn" class="w-full bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
                Save Address
            </button>
        </form>
    </div>



                
                
                
                <div id="help-center" class="content-section bg-white p-8 rounded-lg border shadow-sm text-center text-gray-500 hidden">
                    Visit the help center for assistance.
                </div>
                <div id="terms-conditions" class="content-section bg-white p-8 rounded-lg border shadow-sm text-center text-gray-500 hidden">
                    Terms and conditions for using the platform.
                </div>
            </main>
        </div>
    </div>
</body>
</html>

<script>
    function showContent(contentId, sectionName) {


        // Hide all content sections
        const allSections = document.querySelectorAll('.content-section');
        allSections.forEach(section => section.classList.add('hidden'));

        // Remove active class from all sections
        const allSidebarItems = document.querySelectorAll('.sidebar-item');
        allSidebarItems.forEach(item => {
            item.classList.remove('bg-gray-100', 'border-l-4', 'border-gray-900');
            const arrow = item.querySelector('.arrow-icon');
            if (arrow) arrow.classList.remove('rotate-90');
        });

        // Add active class to the clicked section
        const selectedSection = document.getElementById(contentId);
        const selectedSidebarItem = document.querySelector(`[data-section="${contentId}"]`);
        if (selectedSection) selectedSection.classList.remove('hidden');
        if (selectedSidebarItem) {
            selectedSidebarItem.classList.add('bg-gray-100', 'border-l-4', 'border-gray-900');
            const arrow = selectedSidebarItem.querySelector('.arrow-icon');
            if (arrow) arrow.classList.add('rotate-90');
        }

        // Update main content heading
        const mainHeading = document.getElementById('main-content-heading');
        if (mainHeading) mainHeading.textContent = sectionName;

        // Scroll to main content in mobile view
        if (window.innerWidth < 1024) { 
            document.getElementById("main-content").scrollIntoView({ behavior: "smooth" });
        }
    }

    // Handle showing the address form
    const addAddressBtn = document.getElementById('add-address-btn');
    if (addAddressBtn) {
        addAddressBtn.addEventListener('click', function () {
            console.log('clicked');
            document.getElementById('address-form').classList.remove('hidden');
            document.getElementById('no-address-message').classList.add('hidden');
            this.classList.add('hidden');
        });
    }

    // Fetch saved addresses when the page loads
    document.addEventListener("DOMContentLoaded", async () => {
        showContent('order-alerts', 'Order Alerts');
        await fetchSavedAddresses();
    });

    async function fetchSavedAddresses() {
        try {
            const response = await fetch(`/api/addresses/<%= user._id %>`);
            const addresses = await response.json();

            const addressList = document.getElementById('address-list');
            addressList.innerHTML = "";

            if (addresses.length === 0) {
                document.getElementById('no-address-message').classList.remove('hidden');
                return;
            }

            document.getElementById('no-address-message').classList.add('hidden');

            addresses.forEach(address => {
                const addressItem = document.createElement('div');
                addressItem.className = "p-4 border rounded bg-white shadow";

                addressItem.innerHTML = `
                    <p><strong>${address.fullName}</strong></p>
                    <p>${address.house}, ${address.area}, ${address.city}, ${address.state} - ${address.pincode}</p>
                    <p>Mobile: ${address.mobile}</p>
                    <button class="delete-btn" onclick="deleteAddress('${address._id}', this)">Delete</button>
                `;

                addressList.appendChild(addressItem);
            });
        } catch (error) {
            console.error("Error fetching addresses:", error);
        }
    }

    document.getElementById('save-address-btn').addEventListener('click', async function () {
        const fullName = document.getElementById('full-name').value;
        const mobile = document.getElementById('mobile').value;
        const pincode = document.getElementById('pincode').value;
        const state = document.getElementById('state').value;
        const city = document.getElementById('city').value;
        const house = document.getElementById('house').value;
        const area = document.getElementById('area').value;

        if (!fullName || !mobile || !pincode || !state || !city || !house || !area) {
            alert("Please fill in all fields!");
            return;
        }

        try {
            const response = await fetch('/api/addresses', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({  fullName, mobile, pincode, state, city, house, area })
            });

            if (response.ok) {
                alert("Address Saved!");
                document.getElementById('address-form').reset();
                document.getElementById('address-form').classList.add('hidden');
                document.getElementById('add-address-btn').classList.remove('hidden');
                await fetchSavedAddresses();
            } else {
                alert("Failed to save address.");
            }
        } catch (error) {
            console.error("Error saving address:", error);
        }   
    });

    async function deleteAddress(addressId, buttonElement) {
    try {
        const response = await fetch(`/api/delete-address/${addressId}`, {
            method: "DELETE",
        });

        if (response.ok) {
            buttonElement.parentElement.remove(); // Remove the address from UI
        } else {
            console.error("Failed to delete address");
        }
    } catch (error) {
        console.error("Error deleting address:", error);
    }
}

</script>